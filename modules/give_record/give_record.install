<?php

/**
 * @file
 * Contains install and update hooks.
 */

/**
 * Implements hook_install().
 */
function give_record_install() {
  $entity_manager = \Drupal::entityManager();
  $entity_type = $entity_manager->getDefinition('give_donation');

  // Recreate the original entity type definition, in order to notify the
  // manager of what changed. The change of storage backend will trigger
  // schema installation.
  // @see give_record_test_entity_type_alter()
  $original = clone $entity_type;
  $original->setStorageClass('Drupal\Core\Entity\ContentEntityNullStorage');

  $entity_manager->onEntityTypeUpdate($entity_type, $original);
  _give_record_ensure_fields();
}

/**
 * Make sure the fields are added.
 */
function give_record_update_8001() {
  _give_record_ensure_fields();
}

/**
 * Ensure fields are added.
 */
function _give_record_ensure_fields() {
  /** @var \Drupal\Core\Entity\EntityFieldManagerInterface $field_manager */
  $field_manager = \Drupal::service('entity_field.manager');

  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();
  foreach (['id', 'created'] as $field_name) {
    $field_definition = $field_manager->getFieldStorageDefinitions('give_donation')[$field_name];
    $entity_definition_update_manager->installFieldStorageDefinition($field_name, 'give_donation', 'give_record', $field_definition);
  }
}
